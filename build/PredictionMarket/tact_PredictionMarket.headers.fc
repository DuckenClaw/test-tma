;;
;; Header files for PredictionMarket
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_slice_cell
(cell, ()) __tact_dict_set_slice_cell(cell d, int kl, slice k, cell v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $EventConfigMessage$_load
(slice, ((slice, int, int, int))) $EventConfigMessage$_load(slice sc_0) inline;

;; $EventEntryMessage$_load
(slice, ((slice, int, int, slice, slice))) $EventEntryMessage$_load(slice sc_0) inline;

;; $EventEntry$_store
builder $EventEntry$_store(builder build_0, (slice, int, int, int, slice, slice) v) inline_ref;

;; $EventEntry$_store_cell
cell $EventEntry$_store_cell((slice, int, int, int, slice, slice) v) inline;

;; $PredictionMarket$_store
builder $PredictionMarket$_store(builder build_0, (slice, slice, int, int, int, cell, int, int, int) v) inline;

;; $PredictionMarket$_load
(slice, ((slice, slice, int, int, int, cell, int, int, int))) $PredictionMarket$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $EventStats$_to_external
(int, slice, slice, int, int, int, cell, int, int) $EventStats$_to_external(((int, slice, slice, int, int, int, cell, int, int)) v) inline;

;; $PredictionMarket$init$_load
(slice, ((slice, (slice, int, int, int)))) $PredictionMarket$init$_load(slice sc_0) inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline_ref;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SendParameters$_constructor_to_bounce_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_bounce_value_mode(slice to, int bounce, int value, int mode) inline;

;; $PredictionMarket$_fun_accept_prize_pool
((slice, slice, int, int, int, cell, int, int, int), ()) $PredictionMarket$_fun_accept_prize_pool((slice, slice, int, int, int, cell, int, int, int) $self, int $expected_amount) impure inline_ref;

;; $PredictionMarket$_contract_init
(slice, slice, int, int, int, cell, int, int, int) $PredictionMarket$_contract_init(slice $owner, (slice, int, int, int) $config) impure inline_ref;

;; $PredictionMarket$_contract_load
(slice, slice, int, int, int, cell, int, int, int) $PredictionMarket$_contract_load() impure inline_ref;

;; $PredictionMarket$_contract_store
() $PredictionMarket$_contract_store((slice, slice, int, int, int, cell, int, int, int) v) impure inline;

;; $PredictionMarket$_fun_balance
((slice, slice, int, int, int, cell, int, int, int), int) $PredictionMarket$_fun_balance((slice, slice, int, int, int, cell, int, int, int) $self) impure inline_ref;

;; $PredictionMarket$_fun_prize_pool
((slice, slice, int, int, int, cell, int, int, int), int) $PredictionMarket$_fun_prize_pool((slice, slice, int, int, int, cell, int, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PredictionMarket$_fun_forward
((slice, slice, int, int, int, cell, int, int, int), ()) $PredictionMarket$_fun_forward((slice, slice, int, int, int, cell, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $PredictionMarket$_fun_reply
((slice, slice, int, int, int, cell, int, int, int), ()) $PredictionMarket$_fun_reply((slice, slice, int, int, int, cell, int, int, int) $self, cell $body) impure inline;

;; $PredictionMarket$_fun_notify
((slice, slice, int, int, int, cell, int, int, int), ()) $PredictionMarket$_fun_notify((slice, slice, int, int, int, cell, int, int, int) $self, cell $body) impure inline;

;; $PredictionMarket$_fun_requireOwner
((slice, slice, int, int, int, cell, int, int, int), ()) $PredictionMarket$_fun_requireOwner((slice, slice, int, int, int, cell, int, int, int) $self) impure inline_ref;

;; $PredictionMarket$_fun_owner
((slice, slice, int, int, int, cell, int, int, int), slice) $PredictionMarket$_fun_owner((slice, slice, int, int, int, cell, int, int, int) $self) impure inline_ref;

;; $EventStats$_constructor_created_at_owner_terms_resolutionTime_entries_limit_pool_locked_event_entries_prize_pool_lockTime
((int, slice, slice, int, int, int, cell, int, int)) $EventStats$_constructor_created_at_owner_terms_resolutionTime_entries_limit_pool_locked_event_entries_prize_pool_lockTime(int created_at, slice owner, slice terms, int resolutionTime, int entries_limit, int pool_locked, cell event_entries, int prize_pool, int lockTime) inline;

;; $PredictionMarket$_fun_full_stats
((slice, slice, int, int, int, cell, int, int, int), (int, slice, slice, int, int, int, cell, int, int)) $PredictionMarket$_fun_full_stats((slice, slice, int, int, int, cell, int, int, int) $self) impure inline_ref;

;; $EventEntry$_constructor_address_amount_prediction_timestamp_name_message
((slice, int, int, int, slice, slice)) $EventEntry$_constructor_address_amount_prediction_timestamp_name_message(slice address, int amount, int prediction, int timestamp, slice name, slice message) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
